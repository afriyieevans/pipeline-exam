https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_intro.html
---
- name: Install jenkins
  hosts: jenkins_ec2_First_Instance
  become: true

  tasks:

  Reason for becom: true 
  This indicates that the tasks within this playbook will be executed with escalated privileges, typically using sudo or another privilege escalation mechanism. 
  This is often necessary for performing administrative tasks such as installing software packages.

#Ansible playbook  to install docker using dnf
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html
      - name: Install the latest version of docker 
      ansible.builtin.dnf:
        name: docker 
        state: latest 
        
#Ansible playbook module start service
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
 - name: Start service docker, if not started
      ansible.builtin.service:
        name: docker
        state: started

#Ansible playbook module enable service
  https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
   - name: Enable service docker, if not enabled
      ansible.builtin.service:
        name: docker
        enabled: yes

#Ansible playbook  to install Java-17 using dnf
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html
    - name: Install  java 17 
      ansible.builtin.dnf:
        name: java-17-amazon-corretto-devel.x86_64
        state: latest 

#Ansible playbook  to install Git using dnf
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html
    - name: Install  git
      ansible.builtin.dnf:
        name: git
        state: latest 

#Ansible playbook module to add a line in a file path 
Reason:.bash_profile is important because it allows users to customize their shell environment, set up necessary variables and configurations, and streamline their workflow, 
thereby enhancing productivity and ensuring consistency across shell sessions.
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /home/ec2-user/.bash_profile
        line: JAVA_HOME=/usr/lib/jvm/java-17
        create: yes

#Ansible playbook module to add a line in a file path     
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /home/ec2-user/.bash_profile
        line: export JAVA_HOME
        create: yes

#Ansible playbook module to create directory
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    - name: Create a directory maven
      ansible.builtin.file:
        path: /opt/maven
        state: directory
        mode: '0755'

#Ansible playbook module to give permissions( to give permission to ec2-user )
Owner (User): the owner has full permissions, which include the ability to read, write, and execute the file or directory.
Group: the group members have read and execute permissions, but they cannot modify the file or directory.
Others: other users also have read and execute permissions, but they cannot modify the file or directory.
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /opt/maven
        owner: ec2-user
        group: ec2-user
        mode: '0755'

#Ansible playbook module to download packages
The link you provided is for downloading Apache Maven, a widely used build automation tool primarily for Java projects. Here's why it's used in configuring Maven
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
        - name: Download maven
      ansible.builtin.get_url:
        url: https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz
        dest: /opt/maven/

#Ansible playbook unarchive module    
 Is for downloading the Apache Maven binary distribution package. This package contains the necessary files and tools to set up and run Maven on your system.
 Overall, downloading and configuring the Apache Maven binary distribution package allows you to set up Maven on your system, enabling you to build and manage Java projects using 
Maven's features and capabilities.
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/unarchive_module.html
   - name: Unarchive a file that is already on the remote machine
      unarchive:
        src: /opt/maven/apache-maven-3.9.6-bin.tar.gz
        dest: /opt/maven/
        remote_src: yes

#Ansible playbook remove file
This is an Ansible playbook task that specifies the removal (deletion) of a file after unzipping 
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
          - name: Remove file (delete file)
      ansible.builtin.file:
        path: /opt/maven/apache-maven-3.9.6-bin.tar.gz
        state: absent

#Ansible playbook module to give permissions( to give permission to ec2-user )
Owner (User): the owner has full permissions, which include the ability to read, write, and execute the file or directory.
Group: the group members have read and execute permissions, but they cannot modify the file or directory.
Others: other users also have read and execute permissions, but they cannot modify the file or directory.
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /opt/maven/apache-maven-3.9.6
        owner: ec2-user
        group: ec2-user
        mode: '0755'

#Ansible playbook module to add a line in a file path  
In Unix-like shell scripting (e.g., Bash), $M2_HOME references the value of the variable M2_HOME. So if M2_HOME is set to /path/to/maven, then $M2_HOME/bin would resolve to /path/to/maven/bin.
Therefore, the line M2=$M2_HOME/bin sets the M2 variable to the directory where Maven's executable binaries are located. This could be useful for including Maven's binaries in the system PATH or for other purposes within a shell script or configuration file.
For example, if you subsequently add $M2 to the PATH, it would allow you to run Maven commands directly from the command line without specifying the full path to the Maven executable. It might look something like this:
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /home/ec2-user/.bash_profile
        line: M2_HOME=/opt/maven/apache-maven-3.9.6
        create: yes

#Ansible playbook module to add a line in a file path     
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /home/ec2-user/.bash_profile
        line: M2=$M2_HOME/bin
        create: yes

#Ansible playbook module to add a line in a file path     
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /home/ec2-user/.bash_profile
        line: PATH=$PATH:$JAVA_HOME:$M2_HOME:$M2
        create: yes

#Ansible playbook module to excute command
The purpose of sourcing .bash_profile is to ensure that environment variables, aliases, and other settings defined in that file are loaded into the shell session before executing subsequent commands. 
This can be useful when the subsequent commands rely on specific environment variables or configurations set in the .bash_profile.
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
    - name: Execute the command 
      ansible.builtin.shell: source /home/ec2-user/.bash_profile

#Ansible playbook module to add repository keys
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html
   site: (https://pkg.jenkins.io/redhat-stable/)
 - name: Add Jenkins repository key
      rpm_key:
        key: https://pkg.jenkins.io/redhat/jenkins.io.key
        state: present

#Ansible playbook module to add repository
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_repository_module.html
 site: (https://pkg.jenkins.io/redhat-stable/)
   - name: Add Jenkins repository
      yum_repository:
        name: jenkins
        description: Jenkins Official Repository
        baseurl: http://pkg.jenkins.io/redhat-stable
        gpgcheck: yes
        state: present

#Ansible playbook to add or import jenkins keys
site: (https://pkg.jenkins.io/redhat-stable/)
- name: Import GPG key for Jenkins
  command: sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io-2023.key

#Ansible playbook module to install yum package
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html
    - name: Install Jenkins
      yum:
        name: jenkins
        state: present

#Ansible playbook module start service
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

#Ansible playbook module to open port 8080 for jenkins and sleep
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/wait_for_module.html
   - name: Wait for Jenkins to start
      wait_for:
        port: 8080
        timeout: 60

#Ansible playbook file module to change permissions
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
 - name: Change permissions of /etc/sudoers.d/90-cloud-init-users to 660
      file:
        path: /etc/sudoers.d/90-cloud-init-users
        mode: "0660"

#Ansible playbook module to add a line in a file path     
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
    - name: Add Jenkins to sudoers
      lineinfile:
        path: /etc/sudoers.d/90-cloud-init-users
        line: "jenkins ALL=(ALL) NOPASSWD: ALL"
        state: present

#Ansible playbook file module to change permissions
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
  - name: Change permissions of /etc/sudoers.d/90-cloud-init-users to 440
    file:
        path: /etc/sudoers.d/90-cloud-init-users
        mode: "0440"

#Ansible playbook file module to print text
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
    - name: Print Jenkins initial admin password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password

#Ansible playbook debug msg
https://docs.ansible.com/ansible/latest/network/getting_started/first_playbook.html
- name: Print Jenkins initial admin password
  debug:
    msg: "Jenkins initial admin password: {{ jenkins_admin_password.stdout }}"
        
